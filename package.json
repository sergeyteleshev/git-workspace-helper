{
  "name": "git-workspace-helper",
  "displayName": "Git Workspace Helper",
  "description": "Manage workspace repositories via git without routine using one command",
  "version": "0.2.4",
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "SCM Providers",
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "publisher": "stelesh",
  "repository": {
    "type": "git",
    "url": "https://github.com/sergeyteleshev/git-workspace-helper"
  },
  "icon": "./icon.png",
  "contributes": {
    "commands": [
      {
        "command": "git-workspace-helper.checkout",
        "title": "Git Workspace Helper: Checkout",
        "icon": "$(git-branch)"
      },
      {
        "command": "git-workspace-helper.pull",
        "title": "Git Workspace Helper: Pull All",
        "icon": "$(repo-pull)"
      },
      {
        "command": "git-workspace-helper.merge",
        "title": "Git Workspace Helper: Merge All To Current Branch",
        "icon": "$(git-merge)"
      },
      {
        "command": "git-workspace-helper.createBranch",
        "title": "Git Workspace Helper: Create Branch",
        "icon": "$(git-branch-create)"
      },
      {
        "command": "git-workspace-helper.discardChanges",
        "title": "Git Workspace Helper: Discard Changes",
        "icon": "$(notebook-revert)"
      },
      {
        "command": "git-workspace-helper.stageChanges",
        "title": "Git Workspace Helper: Stage Changes",
        "icon": "$(diff-insert)"
      },
      {
        "command": "git-workspace-helper.unstageChanges",
        "title": "Git Workspace Helper: Unstage Changes",
        "icon": "$(diff-remove)"
      },
      {
        "command": "git-workspace-helper.commit",
        "title": "Git Workspace Helper: Commit Changes",
        "icon": "$(notebook-state-success)"
      },
      {
        "command": "git-workspace-helper.push",
        "title": "Git Workspace Helper: Push All Commits",
        "icon": "$(repo-push)"
      },
      {
        "command": "git-workspace-helper.configureActiveRepositories",
        "title": "Git Workspace Helper: Configure Active Repositories",
        "icon": "$(gear)"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "git-workspace-helper.pull",
          "group": "navigation",
          "when": "workspaceFolderCount > 1 && !scmProvider"
        },
        {
          "command": "git-workspace-helper.createBranch",
          "when": "workspaceFolderCount > 1 && !scmProvider"
        },
        {
          "command": "git-workspace-helper.configureActiveRepositories",
          "when": "workspaceFolderCount > 1 && !scmProvider"
        },
        {
          "command": "git-workspace-helper.push",
          "group": "navigation",
          "when": "workspaceFolderCount > 1 && !scmProvider"
        },
        {
          "command": "git-workspace-helper.merge",
          "when": "workspaceFolderCount > 1 && !scmProvider"
        },
        {
          "command": "git-workspace-helper.checkout",
          "group": "navigation",
          "when": "workspaceFolderCount > 1 && !scmProvider"
        },
        {
          "command": "git-workspace-helper.commit",
          "group": "navigation",
          "when": "workspaceFolderCount > 1 && !scmProvider"
        },
        {
          "command": "git-workspace-helper.discardChanges",
          "when": "workspaceFolderCount > 1 && !scmProvider"
        },
        {
          "command": "git-workspace-helper.unstageChanges",
          "when": "workspaceFolderCount > 1 && !scmProvider"
        },
        {
          "command": "git-workspace-helper.stageChanges",
          "when": "workspaceFolderCount > 1 && !scmProvider"
        }
      ]
    },
    "configuration": {
      "title": "Git Workspace Helper",
      "properties": {
        "git-workspace-helper.defaultBranchName": {
          "type": "string",
          "default": "master",
          "description": "Default branch for each repository. Used for \"Checkout To Default Branch\" command"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "yarn run check-types && yarn run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "yarn run check-types && yarn run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "esbuild": "^0.21.5",
    "eslint": "^8.57.0",
    "npm-run-all": "^4.1.5",
    "prettier": "3.3.3",
    "typescript": "^5.4.5"
  },
  "extensionDependencies": [
    "vscode.git"
  ],
  "dependencies": {
    "reflect-metadata": "^0.2.2",
    "tsyringe": "^4.8.0"
  }
}
